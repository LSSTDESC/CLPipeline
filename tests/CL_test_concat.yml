---

id: Firecrown
# Python modules that are imported to find
# stage classes.  Any stages imported in these
# modules are automatically detected and their names can
# be used below
modules: clpipeline

# The launcher to use
# These are defined in ceci/sites
launcher:
    name: mini
    interval: 0.5

# launcher:
#   name: parsl
#   # max_threads only referenced for local sites
#   #log: parsl_log.txt

# launcher:
#     name: cwl
#     launcher: cwltool
#     dir: ./test/cwl

site:
    name: local
    max_threads: 4
  # max_threads: 4
  # container: joezuntz/txpipe
  # volume:  $PWD:/opt/txpipe



#site:
#    name: nersc-interactive
#    # Put the log for the overall pipeline infrastructure in this file:
#    pipeline_log: log.txt

# site:
#     name: nersc-batch
#     cpu_type: haswell
#     queue: debug
#     max_jobs: 2
#     account: m1727
#     walltime: "00:30:00"
#     setup: /global/projecta/projectdirs/lsst/groups/WL/users/zuntz/setup-cori



# The list of stages to run and the number of processors
# to use for each.
stages:
    - name: FirecrownPipeline
      module_name: clpipeline.firecrown_pipeline
      nprocess: 1

# Definitions of where to find inputs for the overall pipeline.
# Any input required by a pipeline stage that is not generated by
# a previous stage must be defined here.  They are listed by tag.
inputs:
    clusters_sacc_file: ./tests/inputs/dm.txt

# Overall configuration file 
config: ./tests/config.yml

# If all the outputs for a stage already exist then do not re-run that stage
resume: False

# Put all the output files in this directory:
output_dir: ./tests/outputs

# Put the logs from the individual stages in this directory:
log_dir: ./tests/logs

---

id: TXPipe
# Python modules that are imported to find
# stage classes.  Any stages imported in these
# modules are automatically detected and their names can
# be used below
modules: clpipeline

# The launcher to use
# These are defined in ceci/sites
launcher:
    name: mini
    interval: 0.5

# launcher:
#   name: parsl
#   # max_threads only referenced for local sites
#   #log: parsl_log.txt

# launcher:
#     name: cwl
#     launcher: cwltool
#     dir: ./test/cwl

site:
    name: local
    max_threads: 4
  # max_threads: 4
  # container: joezuntz/txpipe
  # volume:  $PWD:/opt/txpipe



#site:
#    name: nersc-interactive
#    # Put the log for the overall pipeline infrastructure in this file:
#    pipeline_log: log.txt

# site:
#     name: nersc-batch
#     cpu_type: haswell
#     queue: debug
#     max_jobs: 2
#     account: m1727
#     walltime: "00:30:00"
#     setup: /global/projecta/projectdirs/lsst/groups/WL/users/zuntz/setup-cori



# The list of stages to run and the number of processors
# to use for each.
stages:
    - name: TXPipePipeline
      module_name: clpipeline.txpipe_pipeline
      nprocess: 1
inputs:
    clusters_sacc_file: ./tests/inputs/dm.txt
# Definitions of where to find inputs for the overall pipeline.
# Any input required by a pipeline stage that is not generated by
# a previous stage must be defined here.  They are listed by tag.
# Overall configuration file 
config: ./tests/config.yml
# If all the outputs for a stage already exist then do not re-run that stage
resume: False
# Put all the output files in this directory:
output_dir: ./tests/outputs
# Put the logs from the individual stages in this directory:
log_dir: ./tests/logs
survey: cosmodc2_20deg2
---
id: TJPCov
# Python modules that are imported to find
# stage classes.  Any stages imported in these
# modules are automatically detected and their names can
# be used below
modules: clpipeline

# The launcher to use
# These are defined in ceci/sites
launcher:
    name: mini
    interval: 0.5
# launcher:
#   name: parsl
#   # max_threads only referenced for local sites
#   #log: parsl_log.txt

# launcher:
#     name: cwl
#     launcher: cwltool
#     dir: ./test/cwl

site:
    name: local
    max_threads: 4
  # max_threads: 4
  # container: joezuntz/txpipe
  # volume:  $PWD:/opt/txpipe



#site:
#    name: nersc-interactive
#    # Put the log for the overall pipeline infrastructure in this file:
#    pipeline_log: log.txt

# site:
#     name: nersc-batch
#     cpu_type: haswell
#     queue: debug
#     max_jobs: 2
#     account: m1727
#     walltime: "00:30:00"
#     setup: /global/projecta/projectdirs/lsst/groups/WL/users/zuntz/setup-cori



# The list of stages to run and the number of processors
# to use for each.
stages:
    - name: TJPCovPipeline
      module_name: clpipeline.tjpcov_pipeline
      nprocess: 1

# Definitions of where to find inputs for the overall pipeline.
# Any input required by a pipeline stage that is not generated by
# a previous stage must be defined here.  They are listed by tag.
inputs:
    clusters_sacc_file: /sps/lsst/groups/clusters/cl_pipeline_project/TXPipe_data/cosmodc2/outputs-20deg2-CL/cluster_sacc_catalog.sacc


# Overall configuration file 
config: ./tests/config.yml


# If all the outputs for a stage already exist then do not re-run that stage
resume: False

# Put all the output files in this directory:
output_dir: ./tests/outputs


# Put the logs from the individual stages in this directory:
log_dir: ./tests/logs

---